// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220531.1

#pragma once
#include "winrt/HL2MarkerTracking.h"
namespace winrt::HL2MarkerTracking::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) MarkerTracker_base : implements<D, HL2MarkerTracking::MarkerTracker, I...>
    {
        using base_type = MarkerTracker_base;
        using class_type = HL2MarkerTracking::MarkerTracker;
        using implements_type = typename MarkerTracker_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"HL2MarkerTracking.MarkerTracker";
        }
    };
}
namespace winrt::HL2MarkerTracking::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) MarkerTrackerT : implements<D, winrt::Windows::Foundation::IActivationFactory, winrt::HL2MarkerTracking::IMarkerTrackerFactory, I...>
    {
        using instance_type = HL2MarkerTracking::MarkerTracker;

        hstring GetRuntimeClassName() const
        {
            return L"HL2MarkerTracking.MarkerTracker";
        }
        auto CreateInstance(array_view<float const> geometry, array_view<float const> extrinsicsCorrection, bool verbose)
        {
            return make<T>(geometry, extrinsicsCorrection, verbose);
        }
        [[noreturn]] winrt::Windows::Foundation::IInspectable ActivateInstance() const
        {
            throw hresult_not_implemented();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_MARKERTRACKER_XAML_G_H) || __has_include("MarkerTracker.xaml.g.h")

#include "MarkerTracker.xaml.g.h"

#else

namespace winrt::HL2MarkerTracking::implementation
{
    template <typename D, typename... I>
    using MarkerTrackerT = MarkerTracker_base<D, I...>;
}

#endif
